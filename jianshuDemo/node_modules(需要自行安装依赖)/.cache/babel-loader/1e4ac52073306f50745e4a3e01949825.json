{"ast":null,"code":"import * as constants from './constants';\nimport { fromJS } from 'immutable';\nvar defaulfState = fromJS({\n  focused: false,\n  mouseIn: false,\n  list: [],\n  page: 1,\n  totalPage: 1\n});\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaulfState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  // 代码优化\n  switch (action.type) {\n    case constants.SEARCH_FOCUS:\n      return state.set('focused', true);\n\n    case constants.SEARCH_BLUR:\n      return state.set('focused', false);\n\n    case constants.CHANGE_LIST:\n      // merge: 相当于同时调用多个set, 但是其性能更高(因为仅执行一次)\n      return state.merge({\n        list: action.data,\n        totalPage: action.totalPage\n      });\n    // return state.set('list', action.data).set('totalPage', action.totalPage);\n\n    case constants.MOUSE_ENTER:\n      return state.set('mouseIn', true);\n\n    case constants.MOUSE_LEAVE:\n      return state.set('mouseIn', false);\n\n    case constants.CHANGE_PAGE_LIST:\n      return state.set('page', action.page);\n\n    default:\n      return state;\n  } // if (action.type === constants.SEARCH_FOCUS){\n  //     /// immutable对象的set方法, 会结合之前的immutable对象的值和设置的值, 返回一个全新的对象\n  //     return state.set('focused', true)\n  // }\n  // if (action.type === constants.SEARCH_BLUR){\n  //     return state.set('focused', false)\n  // }\n  // if (action.type === constants.CHANGE_LIST){\n  //     return state.set('list', action.data);\n  // }\n  // return state;\n\n});","map":{"version":3,"sources":["/Users/mac/Desktop/ReactJsDemo/jianshu/src/common/header/store/reducer.js"],"names":["constants","fromJS","defaulfState","focused","mouseIn","list","page","totalPage","state","action","type","SEARCH_FOCUS","set","SEARCH_BLUR","CHANGE_LIST","merge","data","MOUSE_ENTER","MOUSE_LEAVE","CHANGE_PAGE_LIST"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,aAA3B;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,IAAMC,YAAY,GAAGD,MAAM,CAAC;AACxBE,EAAAA,OAAO,EAAE,KADe;AAExBC,EAAAA,OAAO,EAAE,KAFe;AAGxBC,EAAAA,IAAI,EAAC,EAHmB;AAIxBC,EAAAA,IAAI,EAAE,CAJkB;AAKxBC,EAAAA,SAAS,EAAE;AALa,CAAD,CAA3B;AAQA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAC7C;AACA,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,SAAS,CAACW,YAAf;AACI,aAAOH,KAAK,CAACI,GAAN,CAAU,SAAV,EAAqB,IAArB,CAAP;;AACJ,SAAKZ,SAAS,CAACa,WAAf;AACI,aAAOL,KAAK,CAACI,GAAN,CAAU,SAAV,EAAqB,KAArB,CAAP;;AACJ,SAAKZ,SAAS,CAACc,WAAf;AACI;AACA,aAAON,KAAK,CAACO,KAAN,CAAY;AACfV,QAAAA,IAAI,EAAEI,MAAM,CAACO,IADE;AAEfT,QAAAA,SAAS,EAAEE,MAAM,CAACF;AAFH,OAAZ,CAAP;AAIA;;AACJ,SAAKP,SAAS,CAACiB,WAAf;AACI,aAAOT,KAAK,CAACI,GAAN,CAAU,SAAV,EAAqB,IAArB,CAAP;;AACJ,SAAKZ,SAAS,CAACkB,WAAf;AACI,aAAOV,KAAK,CAACI,GAAN,CAAU,SAAV,EAAqB,KAArB,CAAP;;AACJ,SAAKZ,SAAS,CAACmB,gBAAf;AACI,aAAOX,KAAK,CAACI,GAAN,CAAU,MAAV,EAAkBH,MAAM,CAACH,IAAzB,CAAP;;AACJ;AACI,aAAOE,KAAP;AAnBR,GAF6C,CAwB7C;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACH,CAtCD","sourcesContent":["import * as constants from './constants';\nimport { fromJS } from 'immutable';\n\nconst defaulfState = fromJS({\n    focused: false,\n    mouseIn: false,\n    list:[],\n    page: 1,\n    totalPage: 1\n});\n\nexport default (state = defaulfState, action) => {\n    // 代码优化\n    switch(action.type){\n        case constants.SEARCH_FOCUS:\n            return state.set('focused', true);\n        case constants.SEARCH_BLUR:\n            return state.set('focused', false);\n        case constants.CHANGE_LIST:\n            // merge: 相当于同时调用多个set, 但是其性能更高(因为仅执行一次)\n            return state.merge({\n                list: action.data,\n                totalPage: action.totalPage\n            });\n            // return state.set('list', action.data).set('totalPage', action.totalPage);\n        case constants.MOUSE_ENTER:\n            return state.set('mouseIn', true);\n        case constants.MOUSE_LEAVE:\n            return state.set('mouseIn', false);\n        case constants.CHANGE_PAGE_LIST:\n            return state.set('page', action.page);\n        default:\n            return state;\n    }\n\n    // if (action.type === constants.SEARCH_FOCUS){\n    //     /// immutable对象的set方法, 会结合之前的immutable对象的值和设置的值, 返回一个全新的对象\n    //     return state.set('focused', true)\n    // }\n\n    // if (action.type === constants.SEARCH_BLUR){\n    //     return state.set('focused', false)\n    // }\n\n    // if (action.type === constants.CHANGE_LIST){\n    //     return state.set('list', action.data);\n    // }\n\n    // return state;\n} "]},"metadata":{},"sourceType":"module"}